openapi: 3.0.3
info:
  title: TailOn API Documentation
  description: |
    A web service for mana  /api/v1/apps:
    get:
      summary: List all configured applications
      description: |
        Returns a list of all applications configured in the system with their current status.
        Only returns applications for which the user has at least viewer role.
        
        **Note**: Environment variables are only included for applications where the user
        has admin role. For other applications, `env` will be `null`.
      operationId: getApps
      tags:
        - Applications
      security:
        - TailscaleAuth: []
        - AnonymousAuth: []
      responses:
        '200':
          description: List of applications (filtered by user permissions)
          content:
            application/json:
              schema:
              example:
        '401':
          description: Unauthorized - no user context available
          content:
            text/plain:
              schema:
                type: string
              example: "Unauthorized"ons over Tailscale. This API allows you to
    start, stop, restart, and monitor applications remotely, with real-time log streaming
    capabilities via Server-Sent Events.
    
    ## Authorization
    
    TailOn implements role-based access control with four permission levels:
    
    - **admin**: Full access - can view, start, stop, and restart applications
    - **operator**: Control access - can view, start, stop, and restart applications (environment variables may be hidden)
    - **viewer**: Read-only access - can view application status and logs only
    - **none**: No access to applications
    
    ### Anonymous Users
    
    When Tailscale is disabled, anonymous users are assigned a default role that can be configured
    via the `security.default_role` setting. Anonymous users are tracked by IP address.
    
    ### Tailscale User Capabilities
    
    When using Tailscale, users can be granted specific roles for applications using the
    `https://sierrasoftworks/cap/tailon` capability in your Tailscale ACL policy:
    
    ```json
    {
      "grants": [
        {
          "src": ["user:alice@example.com"],
          "dst": ["my-tailon-server"],
          "app": {
            "https://sierrasoftworks/cap/tailon": [
              {
                "role": "operator",
                "applications": ["web-server", "api-service"]
              }
            ]
          }
        }
      ]
    }
    ```
    
    For more information, see: https://tailscale.com/kb/1537/grants-app-capabilities
  version: 1.0.0
  contact:
    name: SierraSoftworks
    url: https://sierrasoftworks.com
  license:
    name: MIT
    url: https://github.com/SierraSoftworks/tailon/blob/main/LICENSE

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://{hostname}.tailnet-name.ts.net
    description: Tailscale network server
    variables:
      hostname:
        default: tailon-server
        description: The hostname configured for the tailon server on your Tailnet

paths:
  /api/v1/whoami:
    get:
      summary: Get current user information
      description: Returns information about the currently authenticated user
      operationId: whoami
      tags:
        - Authentication
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                anonymous:
                  summary: Anonymous user
                  value:
                    id: "$anonymous$"
                    display_name: Anonymous
                    login_name: ""
                    node: ""
                    is_anonymous: true
                tailscale_user:
                  summary: Tailscale authenticated user
                  value:
                    id: user123
                    display_name: John Doe
                    login_name: john@example.com
                    node: johns-laptop
                    is_anonymous: false

  /api/v1/apps:
    get:
      summary: List all configured applications
      description: Returns a list of all applications configured in the system with their current status
      operationId: getApps
      tags:
        - Applications
      responses:
        '200':
          description: List of applications
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Application'
              example:
                echo-server:
                  config:
                    name: echo-server
                    path: /bin/sh
                    args: ["-c", "while true; do echo 'Hello' $(date); sleep 2; done"]
                    env: ["APP_NAME=echo-server"]
                  state: not_running
                  pid: 0
                  last_exit_code: 0
                counter:
                  config:
                    name: counter
                    path: /bin/sh
                    args: ["-c", "i=0; while true; do echo 'Counter:' $i; i=$((i+1)); sleep 1; done"]
                    env: ["APP_NAME=counter"]
                  state: running
                  pid: 12345
                  last_exit_code: 0
                  state_changed_by:
                    id: user123
                    display_name: John Doe
                    login_name: john@example.com
                    node: johns-laptop
                    is_anonymous: false
                  state_changed_at: "2025-08-07T12:00:00Z"

  /api/v1/apps/{app_name}:
    get:
      summary: Get application details
      description: |
        Returns detailed information about a specific application.
        Requires viewer role or higher for the specified application.
        
        **Note**: Environment variables are only included in the response if the user
        has admin role for the application. Non-admin users will see `env: null`.
      operationId: getApp
      tags:
        - Applications
      security:
        - TailscaleAuth: []
        - AnonymousAuth: []
      parameters:
        - name: app_name
          in: path
          required: true
          description: Name of the application
          schema:
            type: string
          example: echo-server
      responses:
        '200':
          description: Application details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '401':
          description: Unauthorized - no user context available
          content:
            text/plain:
              schema:
                type: string
              example: "Unauthorized"
        '403':
          description: Forbidden - insufficient permissions
          content:
            text/plain:
              schema:
                type: string
              example: "Forbidden: insufficient permissions"
        '404':
          description: Application not found
          content:
            text/plain:
              schema:
                type: string
              example: "application echo-server not found"

  /api/v1/apps/{app_name}/start:
    post:
      summary: Start an application
      description: |
        Starts the specified application if it's not already running.
        Requires operator role or higher for the specified application.
      operationId: startApp
      tags:
        - Application Control
      security:
        - TailscaleAuth: []
        - AnonymousAuth: []
      parameters:
        - name: app_name
          in: path
          required: true
          description: Name of the application to start
          schema:
            type: string
          example: echo-server
      responses:
        '200':
          description: Application started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status: started
        '400':
          description: Failed to start application (e.g., already running)
          content:
            text/plain:
              schema:
                type: string
              example: "application echo-server is already running"
        '401':
          description: Unauthorized - no user context available
          content:
            text/plain:
              schema:
                type: string
              example: "Unauthorized"
        '403':
          description: Forbidden - insufficient permissions (requires operator role)
          content:
            text/plain:
              schema:
                type: string
              example: "Forbidden: insufficient permissions"
        '404':
          description: Application not found
          content:
            text/plain:
              schema:
                type: string

  /api/v1/apps/{app_name}/stop:
    post:
      summary: Stop an application
      description: |
        Stops the specified application if it's currently running.
        Requires operator role or higher for the specified application.
      operationId: stopApp
      tags:
        - Application Control
      security:
        - TailscaleAuth: []
        - AnonymousAuth: []
      parameters:
        - name: app_name
          in: path
          required: true
          description: Name of the application to stop
          schema:
            type: string
          example: echo-server
        - name: force
          in: query
          required: false
          description: Force stop the application using SIGKILL instead of SIGTERM
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Application stopped successfully
          content:
            application/json:
        '400':
          description: Failed to stop application (e.g., not running)
          content:
            text/plain:
              example: "application echo-server is not running"
        '401':
          description: Unauthorized - no user context available
          content:
            text/plain:
              schema:
                type: string
              example: "Unauthorized"
        '403':
          description: Forbidden - insufficient permissions (requires operator role)
          content:
            text/plain:
              schema:
                type: string
              example: "Forbidden: insufficient permissions"
        '404':
          description: Application not found
          content:
            text/plain:
              schema:
                type: string

  /api/v1/apps/{app_name}/restart:
    post:
      summary: Restart an application
      description: |
        Restarts the specified application by stopping it (if running) and then starting it again.
        This operation will succeed even if the application was not previously running.
        Requires operator role or higher for the specified application.
      operationId: restartApp
      tags:
        - Application Control
      security:
        - TailscaleAuth: []
        - AnonymousAuth: []
      parameters:
        - name: app_name
          in: path
          required: true
          description: Name of the application to restart
          schema:
            type: string
          example: echo-server
      responses:
        '200':
          description: Application restarted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                status: restarted
        '400':
          description: Failed to restart application
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized - no user context available
          content:
            text/plain:
              schema:
                type: string
              example: "Unauthorized"
        '403':
          description: Forbidden - insufficient permissions (requires operator role)
          content:
            text/plain:
              schema:
                type: string
              example: "Forbidden: insufficient permissions"
        '404':
          description: Application not found
          content:
            text/plain:
              schema:
                type: string

  /api/v1/apps/{app_name}/logs:
    get:
      summary: Get application logs
      description: |
        Returns application logs. The response format depends on the Accept header:
        - `application/json` (default): Returns logs as JSON array
        - `text/event-stream`: Streams logs in real-time using Server-Sent Events
        
        Requires viewer role or higher for the specified application.
      operationId: getLogs
      tags:
        - Logs
      security:
        - TailscaleAuth: []
        - AnonymousAuth: []
      parameters:
        - name: app_name
          in: path
          required: true
          description: Name of the application
          schema:
            type: string
          example: echo-server
        - name: Accept
          in: header
          required: false
          description: Response format preference
          schema:
            type: string
            enum:
              - text/event-stream
            default: application/json
      responses:
        '200':
          description: Application logs
          content:
            application/json:
            text/event-stream:
        '401':
          description: Unauthorized - no user context available
          content:
            text/plain:
              schema:
                type: string
              example: "Unauthorized"
        '403':
          description: Forbidden - insufficient permissions (requires viewer role)
          content:
            text/plain:
              schema:
                type: string
              example: "Forbidden: insufficient permissions"
        '404':
          description: Application not found
          content:
            text/plain:components:
  schemas:
    User:
      type: object
      required:
        - id
        - display_name
        - is_anonymous
      properties:
        id:
          type: string
          description: Unique identifier for the user
          example: user123
        display_name:
          type: string
          description: Human-readable name for the user
          example: John Doe
        login_name:
          type: string
          description: User's login name or email (empty for anonymous users)
          example: john@example.com
        node:
          type: string
          description: Tailscale node name (empty for anonymous users)
          example: johns-laptop
        is_anonymous:
          type: boolean
          description: Whether this is an anonymous user
          example: false
        ip_address:
          type: string
          description: IP address of the user (for audit logging)
          example: "192.168.1.100"
        app_roles:
          type: object
          description: Application-specific role assignments
          additionalProperties:
            type: string
            enum:
              - admin
              - operator
              - viewer
              - ""
          example:
            "web-server": "admin"
            "api-service": "operator"
            "*": "viewer"

    Application:
      type: object
      required:
        - config
        - state
      properties:
        config:
          $ref: '#/components/schemas/ApplicationConfig'
        state:
          type: string
          enum:
            - not_running
            - running
            - stopping
          description: Current state of the application
          example: running
        pid:
          type: integer
          description: Process ID of the running application (0 if not running)
          example: 12345
        state_changed_by:
          $ref: '#/components/schemas/User'
          description: User who last changed the application state (only present if state was changed by a user)
        state_changed_at:
          type: string
          format: date-time
          description: Timestamp when the application state was last changed (only present if state was changed by a user)
          example: "2025-08-07T12:00:00Z"
        last_exit_code:
          type: integer
          description: Exit code from the last time the application stopped (0 indicates successful exit)
          example: 0

    ApplicationConfig:
      type: object
      required:
        - name
        - path
        - args
        - env
      properties:
        name:
          type: string
          description: Unique name of the application
          example: echo-server
        path:
          type: string
          description: Path to the executable
          example: /bin/sh
        args:
          type: array
          items:
            type: string
          description: Command line arguments
          example: ["-c", "echo 'Hello World'"]
        env:
          type: array
          items:
            type: string
          description: |
            Environment variables in KEY=VALUE format.
            Only visible to users with admin role for the application.
            Will be null for non-admin users.
          example: ["APP_NAME=echo-server", "DEBUG=true"]
          nullable: true

    LogEntry:
      type: object
      required:
        - timestamp
        - message
        - source
      properties:
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 timestamp when the log entry was created
          example: "2025-08-07T12:00:00Z"
        message:
          type: string
          description: Log message content
          example: "Hello World"
        source:
          type: string
          enum:
            - stdout
            - stderr
            - audit
          description: Source of the log entry
          example: stdout

    StatusResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Operation status
          enum:
            - started
            - stopped
            - force_stopped
            - restarted
          example: started

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error description
          example: "application not found"

  responses:
    NotFound:
      description: Application not found
      content:
        text/plain:
          schema:
            type: string
          example: "application echo-server not found"

    BadRequest:
      description: Invalid request or operation failed
      content:
        text/plain:
          schema:
            type: string
          example: "application echo-server is already running"

    InternalServerError:
      description: Internal server error
      content:
        text/plain:
          schema:
            type: string
          example: "Internal server error"

  securitySchemes:
    TailscaleAuth:
      type: http
      description: |
        Tailscale user authentication with role-based access control.
        Users are granted roles via Tailscale capabilities using the
        `https://sierrasoftworks/cap/tailon` capability.
      scheme: bearer
      
    AnonymousAuth:
      type: apiKey
      description: |
        Anonymous user access (when Tailscale is disabled).
        Users are assigned a default role configured via `security.default_role`.
        Anonymous users are tracked by IP address.
      in: header
      name: X-Anonymous-Auth

tags:
  - name: Applications
    description: Operations for listing and viewing application information
  - name: Application Control
    description: Operations for controlling application lifecycle (start/stop/restart)
  - name: Logs
    description: Operations for accessing application logs

externalDocs:
  description: GitHub Repository
  url: https://github.com/SierraSoftworks/tailon
